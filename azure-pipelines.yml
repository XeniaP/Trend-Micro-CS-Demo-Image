# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
- zookeeper

resources:
- repo: self

variables:
  imageName: 'xniapdev/django-app'
  tag: '$(Build.BuildId)'
  apikey: '$(v1apikey)'
  nombre-reporte: 'reporte_vulnerabilidades-$(imageName).xlsx'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerhub'
        repository: $(imageName)
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
    - script: |
        tar --version
        wget https://cli.artifactscan.cloudone.trendmicro.com/tmas-cli/latest/tmas-cli_Linux_x86_64.tar.gz
      displayName: Get Latest Version of TMAS
    - task: ExtractFiles@1
      inputs:
        archiveFilePatterns: '**/tmas-cli_Linux_x86_64.tar.gz'
        destinationFolder: 'tmas-cli'
        cleanDestinationFolder: true
        overwriteExistingFiles: true
    - task: Bash@3
      displayName: Save Docker Image
      inputs:
        targetType: 'inline'
        script: |
          docker save $(imageName):$(tag) -o image.tar
    - task: Bash@3
      displayName: "Scan from Registry to Json"
      inputs:
        targetType: 'inline'
        script: ./tmas-cli/tmas scan docker-archive:image.tar --malwareScan --saveSBOM > result.json
      env:
        TMAS_API_KEY: $(apikey)
    
    - publish: 'result.json'
      displayName: 'Publish json'
      artifact: drop