# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  imageName: 'xniapdev/django-app'
  tag: '$(Build.BuildId)'
  apikey: '$(v1apikey)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerhub'
        repository: $(imageName)
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
- stage: Scan
  displayName: Trend Micro Artifact Scanner
  jobs:
    - job: Image_Scan
      displayName: Image Scan
      pool:
        vmImage: ubuntu-latest
      steps:
      - script: |
          tar --version
          wget https://cli.artifactscan.cloudone.trendmicro.com/tmas-cli/latest/tmas-cli_Linux_x86_64.tar.gz
        displayName: Get Latest Version of TMAS
      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: '**/tmas-cli_Linux_x86_64.tar.gz'
          destinationFolder: 'tmas-cli'
          cleanDestinationFolder: true
          overwriteExistingFiles: true
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            pip install pandas
            ./tmas-cli/tmas scan registry:$(imageName):$(tag) --malwareScan --saveSBOM --platform linux/amd64 | python ArtifactScannerReport.py $(imageName)
        env:
          TMAS_API_KEY: $(apikey)

      - publish: 'result.json'
        displayName: 'Publish results'
        artifact: drop
      
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'FilePath'
          TargetPath: 'result.json'
